server.modules += ( "mod_auth", "mod_authn_file", "mod_authn_jwt" )

auth.backend = "jwt"

auth.backend.jwt.opts = (
    "algorithm" => "RS256",
    "keyfile" => "/etc/ssl/public.pem"
)

auth.require = (
    "" => (
        "method" => "bearer",
        "realm" => "Test",
        "require" => "valid-user"
    ),
)

$HTTP["url"] =~ "^/string-claim" {
    auth.backend.jwt.opts = (
        "algorithm" => "RS256",
        "keyfile" => "/etc/ssl/public.pem",
	"claims" => (
	    "string-claim" => "correct"
	)
    )
}

$HTTP["url"] =~ "^/integer-claim" {
    auth.backend.jwt.opts = (
        "algorithm" => "RS256",
        "keyfile" => "/etc/ssl/public.pem",
	"claims" => (
	    "integer-claim" => 2
	)
    )
}

$HTTP["url"] =~ "^/json-claim" {
    auth.backend.jwt.opts = (
        "algorithm" => "RS256",
        "keyfile" => "/etc/ssl/public.pem",
	"json-claims" => ("{\"integer\":1,\"string\":\"str\"}")
    )
}

$HTTP["url"] =~ "^/nested-claim" {
    auth.backend.jwt.opts = (
        "algorithm" => "RS256",
        "keyfile" => "/etc/ssl/public.pem",
	"json-claims" => ("{\"outer\":{\"claim\":\"valid\"}}")
    )
}

$HTTP["url"] =~ "^/boolean-claim" {
    auth.backend.jwt.opts = (
        "algorithm" => "RS256",
        "keyfile" => "/etc/ssl/public.pem",
	"json-claims" => ("{\"bool\":true}")
    )
}
