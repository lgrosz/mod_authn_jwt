--- a/configure.ac
+++ b/configure.ac
@@ -386,6 +386,44 @@ AM_CONDITIONAL([BUILD_WITH_SASL], [test "$WITH_SASL" != no])
 AC_SUBST([SASL_LIBS])
 AC_SUBST([SASL_CFLAGS])
 
+dnl Checks for libjwt library
+AC_MSG_NOTICE([----------------------------------------])
+AC_MSG_CHECKING([for JWT support])
+AC_ARG_WITH([jwt],
+  [AS_HELP_STRING([--with-jwt@<:@=PATH@:>@],
+    [with JWT authentication support through mod_authn_jwt]
+  )],
+  [WITH_JWT=$withval],
+  [WITH_JWT=no]
+)
+AC_MSG_RESULT([$WITH_JWT])
+
+JWT_INCLUDE=
+JWT_LIBS=
+
+if test "$WITH_JWT" != no; then
+  if test "$WITH_JWT" != yes; then
+    JWT_CFLAGS="-I$WITH_JWT/include"
+    JWT_LIBS="-L$WITH_JWT/lib -ljwt"
+  else
+    AC_CHECK_HEADERS([jwt.h],
+      [AC_CHECK_LIB([jwt], [jwt_valid_new],
+        [
+          JWT_CFLAGS=
+          JWT_LIBS="-ljwt"
+        ],
+        [AC_MSG_ERROR([libjwt not found])]
+      )],
+      [AC_MSG_ERROR([JWT header not found])]
+    )
+  fi
+
+  AC_DEFINE([HAVE_JWT], [1], [JWT support])
+fi
+AM_CONDITIONAL([BUILD_WITH_JWT], [test "$WITH_JWT" != no])
+
+AC_SUBST([JWT_LIBS])
+AC_SUBST([JWT_CFLAGS])
 
 dnl Check for LDAP
 AC_MSG_NOTICE([----------------------------------------])
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -287,6 +287,14 @@ mod_authn_sasl_la_LIBADD = $(SASL_LIBS) $(common_libadd)
 mod_authn_sasl_la_CPPFLAGS = $(SASL_CFLAGS)
 endif
 
+if BUILD_WITH_JWT
+lib_LTLIBRARIES += mod_authn_jwt.la
+mod_authn_jwt_la_SOURCES = mod_authn_jwt.c
+mod_authn_jwt_la_LDFLAGS = $(common_module_ldflags)
+mod_authn_jwt_la_LIBADD = $(JWT_LIBS) $(common_libadd)
+mod_authn_jwt_la_CPPFLAGS = $(JWT_CFLAGS)
+endif
+
 if BUILD_WITH_OPENSSL
 lib_LTLIBRARIES += mod_openssl.la
 mod_openssl_la_SOURCES = mod_openssl.c
